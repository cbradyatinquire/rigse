= render :partial => 'pages/show', :locals => {:teacher_mode => teacher_mode}, :collection => section.pages, :as => :page

- content_for("section_#{dom_id_for(section)}".to_sym) do
  %OTSection{ :name => ot_menu_display_name(section)   }
    %header
    %content
      %object{ :refid => ot_refid_for(section, :page_card_container)}/
      
    %footer
      %OTCompoundDoc{ :local_id => ot_local_id_for(section, :footer) }
        %bodyText
          %p{:style=>"text-align: right; margin: 0px; margin-right: 10px;"}
            %object{:refid =>'${labbook}'}/
            &nbsp;
            %object{ :refid => ot_refid_for(section, :menu) }/

          
- content_for(:library) do
  %OTCardContainer{ :local_id => ot_local_id_for(section, :page_card_container), :contentsMayScroll => 'true', :loadViewOnlyOnDemand => 'true', :closeViewOnExit => 'true' }
    %cards
      - section.pages.each do |page|
        - unless ((teacher_only?(page)) && (!teacher_mode))
          =yield "page_#{dom_id_for(page)}".to_sym
    %currentCard
      - if section.pages.first
        - unless ((teacher_only?(section.pages.first)) && (!teacher_mode))
          %object{ :refid => ot_refid_for(section.pages.first, :content) }/
    %viewedCards
  %OTMenu{ :local_id => ot_local_id_for(section, :menu), :forceSectionFirstOrLast => 'true', :moveToNextSectionAllowed => 'true' }
    %cardContainer
      %object{ :refid => ot_refid_for(section, :page_card_container) }/
    %menuRule
      %object{ :refid => ot_refid_for(section, :page_rule) }/

  %OTMenuRule{ :local_id => ot_local_id_for(section, :page_rule), :jumpToAnyCard => 'true', :stepAhead => 'true' }/
